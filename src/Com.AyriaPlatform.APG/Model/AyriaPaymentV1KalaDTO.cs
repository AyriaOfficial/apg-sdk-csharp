/* 
 * APG API
 *
 * This is a APG (Ayria Payment Gateway) API SDK.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Com.AyriaPlatform.APG.Client.OpenAPIDateConverter;

namespace Com.AyriaPlatform.APG.Model
{
    /// <summary>
    /// A payment dto created in Ayria platform
    /// </summary>
    [DataContract]
    public partial class AyriaPaymentV1KalaDTO :  IEquatable<AyriaPaymentV1KalaDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AyriaPaymentV1KalaDTO" /> class.
        /// </summary>
        /// <param name="name">Name of kala.</param>
        /// <param name="price">Price of kala in Riyal currency.</param>
        /// <param name="count">Count of kala.</param>
        /// <param name="brand">Brand of kala.</param>
        /// <param name="service">Is kala type service?.</param>
        public AyriaPaymentV1KalaDTO(string name = default(string), long price = default(long), int count = default(int), string brand = default(string), bool service = default(bool))
        {
            this.Name = name;
            this.Price = price;
            this.Count = count;
            this.Brand = brand;
            this.Service = service;
        }
        
        /// <summary>
        /// Name of kala
        /// </summary>
        /// <value>Name of kala</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Price of kala in Riyal currency
        /// </summary>
        /// <value>Price of kala in Riyal currency</value>
        [DataMember(Name="price", EmitDefaultValue=false)]
        public long Price { get; set; }

        /// <summary>
        /// Count of kala
        /// </summary>
        /// <value>Count of kala</value>
        [DataMember(Name="count", EmitDefaultValue=false)]
        public int Count { get; set; }

        /// <summary>
        /// Brand of kala
        /// </summary>
        /// <value>Brand of kala</value>
        [DataMember(Name="brand", EmitDefaultValue=false)]
        public string Brand { get; set; }

        /// <summary>
        /// Is kala type service?
        /// </summary>
        /// <value>Is kala type service?</value>
        [DataMember(Name="service", EmitDefaultValue=false)]
        public bool Service { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AyriaPaymentV1KalaDTO {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  Brand: ").Append(Brand).Append("\n");
            sb.Append("  Service: ").Append(Service).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AyriaPaymentV1KalaDTO);
        }

        /// <summary>
        /// Returns true if AyriaPaymentV1KalaDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of AyriaPaymentV1KalaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AyriaPaymentV1KalaDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Price == input.Price ||
                    (this.Price != null &&
                    this.Price.Equals(input.Price))
                ) && 
                (
                    this.Count == input.Count ||
                    (this.Count != null &&
                    this.Count.Equals(input.Count))
                ) && 
                (
                    this.Brand == input.Brand ||
                    (this.Brand != null &&
                    this.Brand.Equals(input.Brand))
                ) && 
                (
                    this.Service == input.Service ||
                    (this.Service != null &&
                    this.Service.Equals(input.Service))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Price != null)
                    hashCode = hashCode * 59 + this.Price.GetHashCode();
                if (this.Count != null)
                    hashCode = hashCode * 59 + this.Count.GetHashCode();
                if (this.Brand != null)
                    hashCode = hashCode * 59 + this.Brand.GetHashCode();
                if (this.Service != null)
                    hashCode = hashCode * 59 + this.Service.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
