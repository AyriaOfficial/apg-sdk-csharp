/* 
 * APG API
 *
 * This is a APG (Ayria Payment Gateway) API SDK.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ayriaplatform.apg.Client.OpenAPIDateConverter;

namespace com.ayriaplatform.apg.Model
{
    /// <summary>
    /// A payment command to create a payment in Ayria platform
    /// </summary>
    [DataContract]
    public partial class AyriaPaymentV1Command :  IEquatable<AyriaPaymentV1Command>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AyriaPaymentV1Command" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AyriaPaymentV1Command() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AyriaPaymentV1Command" /> class.
        /// </summary>
        /// <param name="referralCode">Payee referral code (required).</param>
        /// <param name="amount">Total price in Riyal currency (required).</param>
        /// <param name="payerMobile">Payer mobile number (required).</param>
        /// <param name="payerName">Payer name.</param>
        /// <param name="description">Description for payment.</param>
        /// <param name="paymentNumber">Payment number (external).</param>
        /// <param name="extraData">Extra data related to payment.</param>
        /// <param name="kalas">kalas.</param>
        public AyriaPaymentV1Command(long referralCode = default(long), long amount = default(long), string payerMobile = default(string), string payerName = default(string), string description = default(string), string paymentNumber = default(string), string extraData = default(string), List<AyriaPaymentV1KalaDTO> kalas = default(List<AyriaPaymentV1KalaDTO>))
        {
            // to ensure "referralCode" is required (not null)
            if (referralCode == null)
            {
                throw new InvalidDataException("referralCode is a required property for AyriaPaymentV1Command and cannot be null");
            }
            else
            {
                this.ReferralCode = referralCode;
            }
            
            // to ensure "amount" is required (not null)
            if (amount == null)
            {
                throw new InvalidDataException("amount is a required property for AyriaPaymentV1Command and cannot be null");
            }
            else
            {
                this.Amount = amount;
            }
            
            // to ensure "payerMobile" is required (not null)
            if (payerMobile == null)
            {
                throw new InvalidDataException("payerMobile is a required property for AyriaPaymentV1Command and cannot be null");
            }
            else
            {
                this.PayerMobile = payerMobile;
            }
            
            this.PayerName = payerName;
            this.Description = description;
            this.PaymentNumber = paymentNumber;
            this.ExtraData = extraData;
            this.Kalas = kalas;
        }
        
        /// <summary>
        /// Payee referral code
        /// </summary>
        /// <value>Payee referral code</value>
        [DataMember(Name="referralCode", EmitDefaultValue=true)]
        public long ReferralCode { get; set; }

        /// <summary>
        /// Total price in Riyal currency
        /// </summary>
        /// <value>Total price in Riyal currency</value>
        [DataMember(Name="amount", EmitDefaultValue=true)]
        public long Amount { get; set; }

        /// <summary>
        /// Payer mobile number
        /// </summary>
        /// <value>Payer mobile number</value>
        [DataMember(Name="payerMobile", EmitDefaultValue=true)]
        public string PayerMobile { get; set; }

        /// <summary>
        /// Payer name
        /// </summary>
        /// <value>Payer name</value>
        [DataMember(Name="payerName", EmitDefaultValue=false)]
        public string PayerName { get; set; }

        /// <summary>
        /// Description for payment
        /// </summary>
        /// <value>Description for payment</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Payment number (external)
        /// </summary>
        /// <value>Payment number (external)</value>
        [DataMember(Name="paymentNumber", EmitDefaultValue=false)]
        public string PaymentNumber { get; set; }

        /// <summary>
        /// Extra data related to payment
        /// </summary>
        /// <value>Extra data related to payment</value>
        [DataMember(Name="extraData", EmitDefaultValue=false)]
        public string ExtraData { get; set; }

        /// <summary>
        /// Gets or Sets Kalas
        /// </summary>
        [DataMember(Name="kalas", EmitDefaultValue=false)]
        public List<AyriaPaymentV1KalaDTO> Kalas { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AyriaPaymentV1Command {\n");
            sb.Append("  ReferralCode: ").Append(ReferralCode).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  PayerMobile: ").Append(PayerMobile).Append("\n");
            sb.Append("  PayerName: ").Append(PayerName).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PaymentNumber: ").Append(PaymentNumber).Append("\n");
            sb.Append("  ExtraData: ").Append(ExtraData).Append("\n");
            sb.Append("  Kalas: ").Append(Kalas).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AyriaPaymentV1Command);
        }

        /// <summary>
        /// Returns true if AyriaPaymentV1Command instances are equal
        /// </summary>
        /// <param name="input">Instance of AyriaPaymentV1Command to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AyriaPaymentV1Command input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ReferralCode == input.ReferralCode ||
                    (this.ReferralCode != null &&
                    this.ReferralCode.Equals(input.ReferralCode))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.PayerMobile == input.PayerMobile ||
                    (this.PayerMobile != null &&
                    this.PayerMobile.Equals(input.PayerMobile))
                ) && 
                (
                    this.PayerName == input.PayerName ||
                    (this.PayerName != null &&
                    this.PayerName.Equals(input.PayerName))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.PaymentNumber == input.PaymentNumber ||
                    (this.PaymentNumber != null &&
                    this.PaymentNumber.Equals(input.PaymentNumber))
                ) && 
                (
                    this.ExtraData == input.ExtraData ||
                    (this.ExtraData != null &&
                    this.ExtraData.Equals(input.ExtraData))
                ) && 
                (
                    this.Kalas == input.Kalas ||
                    this.Kalas != null &&
                    input.Kalas != null &&
                    this.Kalas.SequenceEqual(input.Kalas)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ReferralCode != null)
                    hashCode = hashCode * 59 + this.ReferralCode.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.PayerMobile != null)
                    hashCode = hashCode * 59 + this.PayerMobile.GetHashCode();
                if (this.PayerName != null)
                    hashCode = hashCode * 59 + this.PayerName.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.PaymentNumber != null)
                    hashCode = hashCode * 59 + this.PaymentNumber.GetHashCode();
                if (this.ExtraData != null)
                    hashCode = hashCode * 59 + this.ExtraData.GetHashCode();
                if (this.Kalas != null)
                    hashCode = hashCode * 59 + this.Kalas.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
